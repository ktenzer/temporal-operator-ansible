---
- name: Print Database Configuration
  debug:
    msg: "Plugin[{{ plugin_name }}] Driver[{{ driver_name }} DB Host[{{ db_host }}] DB Port[{{ db_port }}]"

- name: Select Mysql Database Schema
  set_fact:
    database_schema_path: "schema/mysql/v57/temporal/versioned"
  when: plugin_name == "mysql"

- name: Select Mysql Visibility Schema
  set_fact:
    visibility_schema_path: "schema/mysql/v57/visibility/versioned"
  when: plugin_name == "mysql"

- name: Select PostgreSQL Database Schema
  set_fact:
    database_schema_path: "schema/postgresql/v96/temporal/versioned"
  when: plugin_name == "postgres"

- name: Select PostgreSQL Visibility Schema
  set_fact:
    visibility_schema_path: "schema/postgresql/v96/visibility/versioned"
  when: plugin_name == "postgres"

- name: Create Dynamic ConfigMap
  k8s:
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: "temporal-dynamic-config"
        namespace: "{{ ansible_operator_meta.namespace }}"
        labels:
          app.kubernetes.io/name: "{{ instance_name }}"
          app.kubernetes.io/instance: "{{ instance_name }}"
          app.kubernetes.io/version: "1.17.5"
          app.kubernetes.io/part-of: "{{ instance_name }}"
      data:
        dynamic_config.yaml: |
- name: Deploy Temporal DB Secret
  k8s:
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: temporal-db-password
        namespace: "{{ ansible_operator_meta.namespace }}"
      stringData:
        password: "{{ temporal_db_password }}"
- name: Deploy Temporal Default Secret
  k8s:
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: temporal-default-store
        namespace: "{{ ansible_operator_meta.namespace }}"
      stringData:
        password: "{{ temporal_db_password }}"
- name: Deploy Temporal Visibility Secret
  k8s:
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: temporal-visibility-store
        namespace: "{{ ansible_operator_meta.namespace }}"
      stringData:
        password: "{{ temporal_db_password }}" 

# Deploy Admintools
- name: Deploy Admintools
  include_role:
    name: admintools

- name: Find Admintools pod
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: "{{ ansible_operator_meta.namespace }}"
    label_selectors:
      - app.kubernetes.io/component = admintools
  register: pod

- name: Admintools Pod Discovered
  debug:
    msg: "{{ pod.resources[0].metadata.name }}"

# Initialize database schema
- name: Create Temporal Database
  kubernetes.core.k8s_exec:
    namespace: "{{ ansible_operator_meta.namespace }}"
    pod: "{{ pod.resources[0].metadata.name }}"
    command: /usr/local/bin/temporal-sql-tool --plugin {{ plugin_name }} --endpoint {{ db_host }} --port {{ db_port }} --user {{ db_user }} --password {{ temporal_db_password }} create-database -database temporal

- name: Create Temporal Database Schema
  kubernetes.core.k8s_exec:
    namespace: "{{ ansible_operator_meta.namespace }}"
    pod: "{{ pod.resources[0].metadata.name }}"
    command: /usr/local/bin/temporal-sql-tool --plugin {{ plugin_name }} --endpoint {{ db_host }} --port {{ db_port }} --user {{ db_user }} --password {{ temporal_db_password }} --database temporal setup-schema -v 0.0 

- name: Update Temporal Database Schema
  kubernetes.core.k8s_exec:
    namespace: "{{ ansible_operator_meta.namespace }}"
    pod: "{{ pod.resources[0].metadata.name }}"
    command: /usr/local/bin/temporal-sql-tool --plugin {{ plugin_name }} --endpoint {{ db_host }} --port {{ db_port }} --user {{ db_user }} --password {{ temporal_db_password }} --database temporal update -schema-dir {{ database_schema_path }}
  register: database_schema_update

- name: Create Temporal Visibility Database
  kubernetes.core.k8s_exec:
    namespace: "{{ ansible_operator_meta.namespace }}"
    pod: "{{ pod.resources[0].metadata.name }}"
    command: /usr/local/bin/temporal-sql-tool --plugin {{ plugin_name }} --endpoint {{ db_host }} --port {{ db_port }} --user {{ db_user }} --password {{ temporal_db_password }} create-database -database temporal_visibility

- name: Create Temporal Visibility Database Schema
  kubernetes.core.k8s_exec:
    namespace: "{{ ansible_operator_meta.namespace }}"
    pod: "{{ pod.resources[0].metadata.name }}"
    command: /usr/local/bin/temporal-sql-tool --plugin {{ plugin_name }} --endpoint {{ db_host }} --port {{ db_port }} --user {{ db_user }} --password {{ temporal_db_password }} --database temporal_visibility setup-schema -v 0.0

- name: Update Temporal Visibility Database Schema
  kubernetes.core.k8s_exec:
    namespace: "{{ ansible_operator_meta.namespace }}"
    pod: "{{ pod.resources[0].metadata.name }}"
    command: /usr/local/bin/temporal-sql-tool --plugin {{ plugin_name }} --endpoint {{ db_host }} --port {{ db_port }} --user {{ db_user }} --password {{ temporal_db_password }} --database temporal_visibility update -schema-dir {{ visibility_schema_path }}
  register: visibility_schema_update

# Deploy Temporal Services
- name: Deploy Web
  include_role:
    name: web

- name: Deploy Frontend
  include_role:
    name: frontend
  when: frontend.enable and database_schema_update.rc == 0 and visibility_schema_update.rc == 0

- name: Deploy Matching
  include_role:
    name: matching
  when: matching.enable and database_schema_update.rc == 0 and visibility_schema_update.rc == 0

- name: Deploy History
  include_role:
    name: history
  when: history.enable and database_schema_update.rc == 0 and visibility_schema_update.rc == 0

- name: Deploy Worker
  include_role:
    name: worker
  when: worker.enable and database_schema_update.rc == 0 and visibility_schema_update.rc == 0     
