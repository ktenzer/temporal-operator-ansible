---
# tasks file for Temporal
- name: Create Admintools Deployment
  k8s:
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: "temporal-admintools"
        namespace: "{{ ansible_operator_meta.namespace }}"
        labels:
          app.kubernetes.io/component: admintools
          app.kubernetes.io/name: "{{ instance_name }}"
          app.kubernetes.io/instance: "{{ instance_name }}"
          app.kubernetes.io/version: "1.17.5"
          app.kubernetes.io/part-of: "{{ instance_name }}"
      spec:
        progressDeadlineSeconds: 600
        replicas: 1
        revisionHistoryLimit: 10
        selector:
          matchLabels:
            app.kubernetes.io/component: admintools
            app.kubernetes.io/instance: "{{ instance_name }}"
            app.kubernetes.io/name: "{{ instance_name }}"
        strategy:
          rollingUpdate:
            maxSurge: 25%
            maxUnavailable: 25%
          type: RollingUpdate
        template:
          metadata:
            creationTimestamp: null
            labels:
              app.kubernetes.io/component: admintools
              app.kubernetes.io/name: "{{ instance_name }}"
              app.kubernetes.io/instance: "{{ instance_name }}"
              app.kubernetes.io/version: "1.17.5"
              app.kubernetes.io/part-of: "{{ instance_name }}"
          spec:
            containers:
            - env:
              - name: TEMPORAL_CLI_ADDRESS
                value: temporal-frontend:7233
              image: temporalio/admin-tools:1.17.5
              imagePullPolicy: IfNotPresent
              livenessProbe:
                exec:
                  command:
                  - ls
                  - /
                failureThreshold: 3
                initialDelaySeconds: 5
                periodSeconds: 5
                successThreshold: 1
                timeoutSeconds: 1
              name: admin-tools
              ports:
              - containerPort: 22
                name: http
                protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            securityContext: {}
            terminationGracePeriodSeconds: 30

# Admintools service
- name: Create Admintools Service
  k8s:
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        labels:
              app.kubernetes.io/component: admintools
              app.kubernetes.io/name: "{{ instance_name }}"
              app.kubernetes.io/instance: "{{ instance_name }}"
              app.kubernetes.io/version: "1.17.5"
              app.kubernetes.io/part-of: "{{ instance_name }}"
        name: temporal-admintools
        namespace: "{{ ansible_operator_meta.namespace }}"
      spec:
        type: ClusterIP
        ports:
        - name: ssh
          port: 22
          protocol: TCP
          targetPort: 22
        sessionAffinity: None            
        selector:
          app.kubernetes.io/name: "{{ instance_name }}"
          app.kubernetes.io/instance: "{{ instance_name }}"
          app.kubernetes.io/component: frontend
      status:
        loadBalancer: {}